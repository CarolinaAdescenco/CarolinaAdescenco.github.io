{"version":3,"file":"component---src-pages-index-jsx-25bf54c04d07ed7710be.js","mappings":"+QAAA,EAAe,IAA0B,qECgBnCA,EAAOC,EAAAA,QAAAA,MAAAA,WAAH,4BAAGA,CAAH,mbASOC,EAAAA,EAAAA,MAcWA,EAAAA,EAAAA,YAqBtBC,GAAYF,EAAAA,EAAAA,SAAOG,EAAAA,GAAV,uCAAGH,CAAH,2CAKTI,EAAaJ,EAAAA,QAAAA,QAAAA,WAAH,4BAAGA,CAAH,oTAGQ,SAAAK,GAAK,aAAWA,EAAMC,GAAjB,MAMLL,EAAAA,EAAAA,kBAclBM,EAAYP,EAAAA,QAAAA,IAAAA,WAAH,4BAAGA,CAAH,uIAYTQ,EAAYR,EAAAA,QAAAA,OAAAA,WAAH,4BAAGA,CAAH,oLAOFC,EAAAA,EAAAA,OAIK,SAAAI,GAAK,OACfA,EAAMI,OAASR,EAAAA,EAAAA,MAAeA,EAAAA,EAAAA,oBAOhCS,EAAcV,EAAAA,QAAAA,IAAAA,WAAH,4BAAGA,CAAH,8oBAeSW,EAAAA,GAOAC,EAAAA,GAoBIC,EAAAA,GAOAC,EAAAA,IAOxBC,EAAaf,EAAAA,QAAAA,IAAAA,WAAH,4BAAGA,CAAH,upBAGEC,EAAAA,EAAAA,KAULA,EAAAA,EAAAA,MAyBQA,EAAAA,EAAAA,KAEKA,EAAAA,EAAAA,OA4F1B,EAxEc,SAAC,GAAc,IACjBe,EADgB,EAAXC,KACUC,wBAAfF,MACDG,EAAUC,EAAAA,SAAeJ,EAAMK,KAAI,qBAAGC,KAAgBC,OAAOC,QAApE,GAEQC,EAAeC,EAAAA,EAAAA,WACvB,EAA8BN,EAAAA,SAAe,GAAtCO,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,IAAY,WACRD,EAAWD,EAAU,GAEjBA,IAAYR,EAAOW,OAAS,GAC5BF,EAAW,KAEhB,KAGC,gBAACxB,EAAD,CAAYE,GAAIa,EAAOQ,IACnB,gBAAC,IAAD,MAEA,gBAAC,EAAD,KACI,gBAACI,EAAA,EAAD,CAAKC,UAAU,wEACX,gBAACC,EAAA,EAAD,CAAKD,UAAU,2BACX,gBAACjC,EAAD,KACI,uBAAKmC,IAAKC,EAASC,IAAI,SACvB,6CAIR,gBAACH,EAAA,EAAD,CAAKD,UAAU,mBACX,gBAACtB,EAAD,KACKe,EAAWJ,KAAI,SAACgB,EAAMC,GAAP,OACZD,EAAKE,KACD,gBAAC,IAAD,CAAMC,IAAKF,EAAGG,GAAIJ,aAAF,EAAEA,EAAME,MACnBF,EAAKK,MACLL,EAAKM,UACF,gCACI,2BACA,4BAAON,EAAKM,YAKxB,gBAAC5B,EAAD,CAAYyB,IAAKF,GACZD,EAAKK,MACLL,EAAKM,UACF,gCACI,2BACA,4BAAON,EAAKM,iBASxC,gBAACpC,EAAD,CAAWyB,UAAU,gCAChBb,EAAOE,KAAI,SAACgB,EAAMO,GAAP,OACR,gBAACpC,EAAD,CACIgC,IAAKH,EACLQ,KAAK,SACLpC,OAAQmC,IAAUjB,EAClBmB,QAAS,kBAAMlB,EAAWgB","sources":["webpack://gd8-inc-novo/./src/assets/gd8-incorporadora-logo.png","webpack://gd8-inc-novo/./src/pages/index.jsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/gd8-incorporadora-logo-03934d1d4d3126ddf1822b51d5196cc8.png\";","/* eslint-disable react/jsx-no-comment-textnodes */\nimport * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport { Container as Cont, Row, Col } from \"react-bootstrap\"\n\nimport { colors } from \"../utils/colors\"\nimport { data as util } from \"../utils/data\"\nimport { useInterval } from \"../utils/functions\"\nimport { fadeDown, fadeLeft, fadeRight, fadeUp } from \"../utils/keyframes\"\n\nimport Contact from \"../components/contact\"\nimport Link from \"../components/link\"\n\nimport LogoIMG from \"../assets/gd8-incorporadora-logo.png\"\n\nconst Logo = styled.aside`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n\n    width: 100%;\n\n    h2 {\n        color: ${colors.white};\n        font-weight: 100;\n        text-transform: uppercase;\n\n        letter-spacing: 6px;\n        margin-left: 14px;\n        font-size: 1.4rem;\n        margin-top: 18px;\n    }\n\n    img {\n        opacity: 0.8;\n        width: auto;\n        max-width: 150px;\n        background-color: ${colors.themeColor};\n        padding: 8px;\n    }\n\n    @media (min-width: 992px) {\n        width: 100%;\n\n        h2 {\n            letter-spacing: 6px;\n            margin-left: 12px;\n            font-size: 18px;\n            margin-top: 18px;\n        }\n\n        img{\n            padding: 16px;\n            max-width: 100%;\n        }\n    }\n`\n\nconst Container = styled(Cont)`\n    margin-top: 100px;\n    margin-bottom: 100px;\n`\n\nconst Background = styled.section`\n    position: absolute;\n    top: 0;\n    background-image: ${props => `url(${props.bg})`};\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n\n    background-blend-mode: multiply;\n    background-color: ${colors.transparentBlack};\n\n    display: flex;\n    align-items: center;\n\n    height: initial;\n    min-height: 100vh;\n\n    transition: ease 2s;\n\n    width: 100vw;\n    min-width: -webkit-fill-available;\n`\n\nconst DotColumn = styled.div`\n    display: flex;\n    align-items: center;\n    margin: 32px auto;\n    justify-content: center;\n\n    @media (min-width: 992px) {\n        flex-direction: row;\n        margin: auto;\n    }\n`\n\nconst DotButton = styled.button`\n    border: none;\n    border-radius: 50%;\n    width: 15px;\n    height: 15px;\n    margin: 0 16px 0 0;\n\n    color: ${colors.white};\n    font-weight: 200;\n    white-space: nowrap;\n\n    background: ${props =>\n        props.active ? colors.white : colors.transparentWhite};\n\n    @media (min-width: 992px) {\n        margin: 0 24px 0 0;\n    }\n`\n\nconst RowAnimated = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: end;\n    flex-wrap: wrap;\n\n    a {\n        margin: 18px;\n        min-width: 260px;\n        max-width: 260px;\n    }\n\n    a:nth-child(odd),\n    div:nth-child(odd) {\n        margin-right: auto;\n        animation: 1.5s ${fadeRight};\n        animation-delay: 1s;\n    }\n\n    a:nth-child(even),\n    div:nth-child(even) {\n        margin-left: auto;\n        animation: 1.5s ${fadeLeft};\n        animation-delay: 1s;\n    }\n\n    @media (min-width: 992px) {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        flex-wrap: wrap;\n        align-items: flex-end;\n        max-height: 400px;\n\n        a,\n        div {\n            width: 48%;\n            margin: 0;\n        }\n\n        a:nth-child(odd),\n        div:nth-child(odd) {\n            animation: 1.5s ${fadeUp};\n            animation-delay: 1s;\n            margin: 0 0 40px 0;\n        }\n\n        a:nth-child(even),\n        div:nth-child(even) {\n            animation: 1.5s ${fadeDown};\n            animation-delay: 1s;\n            margin: 0;\n        }\n    }\n`\n\nconst CardButton = styled.div`\n    margin: 16px;\n    padding: 21px;\n    background: ${colors.dark};\n    border-radius: 12px;\n    text-transform: uppercase;\n    text-decoration: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    text-align: center;\n    width: fit-content;\n    color: ${colors.white};\n    transform: translateY(0);\n    transition: 0.5s ease-in-out;\n    -webkit-box-shadow: 6px 12px 25px -5px rgba(0, 0, 0, 0.67);\n    box-shadow: 6px 12px 25px -5px rgba(0, 0, 0, 0.67);\n    font-weight: 100;\n    font-size: 14px;\n    letter-spacing: 1.5px;\n\n    @media (max-width: 991) {\n        width: fit-content;\n    }\n\n    span {\n        margin-top: 8px;\n    }\n\n    @media (min-width: 992px) {\n        width: 100%;\n        max-width: 260px;\n        margin: 16px;\n        padding: 26px 36px;\n        font-size: 16px;\n\n        &:hover {\n            color: ${colors.dark};\n            transform: translateY(-2.5px);\n            background: ${colors.white};\n        }\n    }\n`\n\nexport const query = graphql`\n    query {\n        allContentfulBannerHome {\n            edges {\n                node {\n                    imagem {\n                        url\n                    }\n                    nome\n                }\n            }\n        }\n    }\n`\n\nconst Index = ({ data }) => {\n    const { edges } = data.allContentfulBannerHome\n    const [images] = React.useState(edges.map(({ node }) => node.imagem.url))\n\n    const { routes } = util\n    const [element, setElement] = React.useState(0)\n\n    useInterval(() => {\n        setElement(element + 1)\n\n        if (element === images.length - 1) {\n            setElement(0)\n        }\n    }, 5000)\n\n    return (\n        <Background bg={images[element]}>\n            <Contact />\n\n            <Container>\n                <Row className=\"justify-content-center justify-content-lg-between align-items-center\">\n                    <Col className=\"col-6 col-lg-3 p-0 mb-5\">\n                        <Logo>\n                            <img src={LogoIMG} alt=\"logo\" />\n                            <h2>Incorporadora</h2>\n                        </Logo>\n                    </Col>\n\n                    <Col className=\"col-12 col-lg-7\">\n                        <RowAnimated>\n                            {routes.map((item, i) =>\n                                item.path ? (\n                                    <Link key={i} to={item?.path}>\n                                        {item.title}\n                                        {item.subtitle && (\n                                            <>\n                                                <br />\n                                                <span>{item.subtitle}</span>\n                                            </>\n                                        )}\n                                    </Link>\n                                ) : (\n                                    <CardButton key={i}>\n                                        {item.title}\n                                        {item.subtitle && (\n                                            <>\n                                                <br />\n                                                <span>{item.subtitle}</span>\n                                            </>\n                                        )}\n                                    </CardButton>\n                                )\n                            )}\n                        </RowAnimated>\n                    </Col>\n\n                    <DotColumn className=\"col-12 mt-5 d-none d-lg-flex\">\n                        {images.map((item, index) => (\n                            <DotButton\n                                key={item}\n                                type=\"button\"\n                                active={index === element}\n                                onClick={() => setElement(index)}\n                            />\n                        ))}\n                    </DotColumn>\n                </Row>\n            </Container>\n        </Background>\n    )\n}\n\nexport default Index\n"],"names":["Logo","styled","colors","Container","Cont","Background","props","bg","DotColumn","DotButton","active","RowAnimated","fadeRight","fadeLeft","fadeUp","fadeDown","CardButton","edges","data","allContentfulBannerHome","images","React","map","node","imagem","url","routes","util","element","setElement","useInterval","length","Row","className","Col","src","LogoIMG","alt","item","i","path","key","to","title","subtitle","index","type","onClick"],"sourceRoot":""}
